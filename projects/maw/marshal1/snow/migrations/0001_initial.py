# Generated by Django 2.0.4 on 2018-06-10 23:06

from django.db import migrations, models
import django.db.models.deletion
import maw_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text='Unique name for this field under this relation.', max_length=255, verbose_name='Field name')),
                ('max_length', maw_utils.PositiveIntegerField(blank=True, default=255, help_text='Maximum number of characters in this field.', null=True)),
                ('is_required', models.BooleanField(default=False, help_text='Whether this field is required for a genre instance.')),
            ],
            options={
                'ordering': ['relation', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text="Unique name for this snowflake genre. Please include a version label suffix like 'V1.0'.", max_length=255, unique=True, verbose_name='Genre name')),
                ('create_datetime', models.DateTimeField(auto_now=True, help_text='Creation DateTime', null=True)),
                ('notes', maw_utils.SpaceTextField(blank=True, default='', help_text='(1) Used for? (2) based on? Newlines are discarded, so use (1), (2), etc, labels for notes.', max_length=2550, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lookup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text='Unique name for this lookup.', max_length=255)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Field')),
            ],
        ),
        migrations.CreateModel(
            name='Regex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text='Unique name for this field for this output relation.', max_length=255)),
                ('regex', maw_utils.SpaceCharField(default='', help_text='Unique name for this field for this output relation.', max_length=255)),
                ('notice', maw_utils.SpaceTextField(blank=True, default='', help_text='Notice to explain a violation for this regex.', max_length=2550, null=True)),
                ('notes', maw_utils.SpaceTextField(blank=True, default='', help_text='Notes on this instance.', max_length=2550, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Field')),
            ],
            options={
                'verbose_name_plural': 'Regexes',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text='Unique name for this relation under this genre.', max_length=255, verbose_name='Relation name')),
                ('local_name', maw_utils.SpaceCharField(default='', help_text='Unique name for this relation among those with the same parent. Eg, an xml element name for some uses.', max_length=255)),
                ('min_occurs', maw_utils.PositiveIntegerField(default=1, help_text='Minimum occurrences required under this parent.')),
                ('max_occurs', models.IntegerField(default=0, help_text='Maximum occurrences required under this parent. 0 or null means no limit.')),
                ('notes', maw_utils.SpaceTextField(blank=True, default='', help_text='Notes on this relation.', max_length=2550, null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Genre')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='snow.Relation')),
            ],
            options={
                'ordering': ['genre', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='', help_text='Unique name for this vocabulary with version suffix.', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Vocabularies',
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('word', maw_utils.SpaceCharField(default='', help_text='A word in this vocabulary.', max_length=255)),
                ('vocabulary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Vocabulary')),
            ],
            options={
                'ordering': ['word'],
            },
        ),
        migrations.AddField(
            model_name='lookup',
            name='vocabulary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Vocabulary'),
        ),
        migrations.AddField(
            model_name='field',
            name='relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snow.Relation'),
        ),
        migrations.AlterUniqueTogether(
            name='word',
            unique_together={('vocabulary', 'word')},
        ),
        migrations.AlterUniqueTogether(
            name='relation',
            unique_together={('genre', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='field',
            unique_together={('relation', 'name')},
        ),
    ]
