# Generated by Django 2.0.7 on 2018-09-01 19:53

from django.db import migrations, models
import django.db.models.deletion
import maw_utils
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bibvid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bibvid', maw_utils.SpaceCharField(default='bibvid', help_text='UF Bibvid with 10-character bib, underbar, and 5-digit vid value.', max_length=255, verbose_name='Bibvid AA12345678_NNNNN')),
                ('resource_subpath', maw_utils.SpaceCharField(blank=True, default='subpath', max_length=255, null=True)),
                ('count_files', models.PositiveIntegerField(default=0)),
                ('count_pdf', models.PositiveIntegerField(default=0)),
                ('count_jp2', models.PositiveIntegerField(default=0)),
                ('count_jpeg', models.PositiveIntegerField(default=0)),
                ('note', maw_utils.SpaceTextField(blank=True, default='note', help_text='General note', max_length=2550, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelatedTerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='name', help_text='If no parent, name of thesaurus, else the name for this narrower term under the broader parent.', max_length=255, verbose_name='Related term name')),
            ],
        ),
        migrations.CreateModel(
            name='TermEval',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suggested_term', maw_utils.SpaceCharField(default='Term name', max_length=255, unique=True)),
                ('count_suggested', models.PositiveIntegerField(default=0)),
                ('approval_rating', models.PositiveIntegerField(default=50, help_text='If rated over 50, this term will be recorded in the METS.', verbose_name='Your Rating')),
            ],
        ),
        migrations.CreateModel(
            name='TermSuggestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('retrieval_datetime', models.DateTimeField(auto_now=True, verbose_name='Term search DateTime (UTC)')),
                ('note', maw_utils.SpaceTextField(blank=True, default='note', max_length=2550, null=True)),
                ('text_content_note', maw_utils.SpaceTextField(blank=True, default='note2', max_length=2550, null=True)),
                ('content_save_file', maw_utils.SpaceTextField(blank=True, default='save', max_length=25000, null=True)),
                ('bibvid', models.ForeignKey(help_text='The Bib_vid whose content was used to request suggested terms', on_delete=django.db.models.deletion.CASCADE, to='dps.Bibvid')),
            ],
        ),
        migrations.CreateModel(
            name='Thesaurus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ThesTree',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', maw_utils.SpaceCharField(default='name', help_text='If no parent, name of thesaurus, else the name for this narrower term under the broader parent.', max_length=255, verbose_name='Thesaurus term name')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dps.ThesTree', verbose_name='Parent relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='thesaurus',
            name='root',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dps.ThesTree'),
        ),
        migrations.AddField(
            model_name='termsuggestion',
            name='thesaurus',
            field=models.ForeignKey(help_text='Thesaurus used for the "location" parameter in the GetSuggestedTerms API request to Access Innovations', on_delete=django.db.models.deletion.CASCADE, to='dps.ThesTree'),
        ),
        migrations.AddField(
            model_name='termeval',
            name='response',
            field=models.ForeignKey(help_text='GetSuggestedTerm API search which generated this term.', on_delete=django.db.models.deletion.CASCADE, to='dps.TermSuggestion'),
        ),
        migrations.AddField(
            model_name='relatedterm',
            name='primary_term',
            field=models.ForeignKey(help_text='Primary term in thesauri to which this term is related', on_delete=django.db.models.deletion.CASCADE, related_name='related_term', to='dps.ThesTree'),
        ),
    ]
